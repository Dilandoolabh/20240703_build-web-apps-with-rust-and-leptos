{ use serde_json :: from_str ; use std :: sync :: LazyLock ; use crate :: data :: decode_browser_name ; type Usage = LazyLock < Vec < (& 'static str , & 'static str , f32) >> ; type Json = Vec < (u8 , & 'static str , f32) > ; # [inline (never)] fn usage (data : & 'static str) -> Vec < (& 'static str , & 'static str , f32) > { from_str :: < Json > (data) . unwrap () . into_iter () . map (| (browser , version , usage) | (decode_browser_name (browser) , version , usage)) . collect () } static REGIONS : & [& str] = & ["AD" , "AE" , "AF" , "AG" , "AI" , "AL" , "AM" , "AO" , "AR" , "AS" , "AT" , "AU" , "AW" , "AX" , "AZ" , "BA" , "BB" , "BD" , "BE" , "BF" , "BG" , "BH" , "BI" , "BJ" , "BM" , "BN" , "BO" , "BR" , "BS" , "BT" , "BW" , "BY" , "BZ" , "CA" , "CD" , "CF" , "CG" , "CH" , "CI" , "CK" , "CL" , "CM" , "CN" , "CO" , "CR" , "CU" , "CV" , "CX" , "CY" , "CZ" , "DE" , "DJ" , "DK" , "DM" , "DO" , "DZ" , "EC" , "EE" , "EG" , "ER" , "ES" , "ET" , "FI" , "FJ" , "FK" , "FM" , "FO" , "FR" , "GA" , "GB" , "GD" , "GE" , "GF" , "GG" , "GH" , "GI" , "GL" , "GM" , "GN" , "GP" , "GQ" , "GR" , "GT" , "GU" , "GW" , "GY" , "HK" , "HN" , "HR" , "HT" , "HU" , "ID" , "IE" , "IL" , "IM" , "IN" , "IQ" , "IR" , "IS" , "IT" , "JE" , "JM" , "JO" , "JP" , "KE" , "KG" , "KH" , "KI" , "KM" , "KN" , "KP" , "KR" , "KW" , "KY" , "KZ" , "LA" , "LB" , "LC" , "LI" , "LK" , "LR" , "LS" , "LT" , "LU" , "LV" , "LY" , "MA" , "MC" , "MD" , "ME" , "MG" , "MH" , "MK" , "ML" , "MM" , "MN" , "MO" , "MP" , "MQ" , "MR" , "MS" , "MT" , "MU" , "MV" , "MW" , "MX" , "MY" , "MZ" , "NA" , "NC" , "NE" , "NF" , "NG" , "NI" , "NL" , "NO" , "NP" , "NR" , "NU" , "NZ" , "OM" , "PA" , "PE" , "PF" , "PG" , "PH" , "PK" , "PL" , "PM" , "PN" , "PR" , "PS" , "PT" , "PW" , "PY" , "QA" , "RE" , "RO" , "RS" , "RU" , "RW" , "SA" , "SB" , "SC" , "SD" , "SE" , "SG" , "SH" , "SI" , "SK" , "SL" , "SM" , "SN" , "SO" , "SR" , "ST" , "SV" , "SY" , "SZ" , "TC" , "TD" , "TG" , "TH" , "TJ" , "TL" , "TM" , "TN" , "TO" , "TR" , "TT" , "TV" , "TW" , "TZ" , "UA" , "UG" , "US" , "UY" , "UZ" , "VA" , "VC" , "VE" , "VG" , "VI" , "VN" , "VU" , "WF" , "WS" , "YE" , "YT" , "ZA" , "ZM" , "ZW" , "alt-af" , "alt-an" , "alt-as" , "alt-eu" , "alt-na" , "alt-oc" , "alt-sa" , "alt-ww"] ; static USAGES : [Usage ; 240usize] = [LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "AD" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "AE" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "AF" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "AG" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "AI" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "AL" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "AM" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "AO" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "AR" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "AS" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "AT" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "AU" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "AW" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "AX" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "AZ" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "BA" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "BB" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "BD" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "BE" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "BF" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "BG" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "BH" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "BI" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "BJ" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "BM" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "BN" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "BO" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "BR" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "BS" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "BT" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "BW" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "BY" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "BZ" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "CA" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "CD" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "CF" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "CG" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "CH" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "CI" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "CK" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "CL" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "CM" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "CN" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "CO" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "CR" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "CU" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "CV" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "CX" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "CY" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "CZ" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "DE" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "DJ" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "DK" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "DM" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "DO" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "DZ" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "EC" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "EE" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "EG" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "ER" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "ES" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "ET" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "FI" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "FJ" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "FK" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "FM" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "FO" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "FR" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "GA" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "GB" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "GD" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "GE" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "GF" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "GG" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "GH" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "GI" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "GL" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "GM" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "GN" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "GP" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "GQ" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "GR" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "GT" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "GU" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "GW" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "GY" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "HK" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "HN" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "HR" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "HT" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "HU" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "ID" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "IE" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "IL" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "IM" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "IN" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "IQ" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "IR" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "IS" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "IT" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "JE" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "JM" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "JO" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "JP" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "KE" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "KG" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "KH" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "KI" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "KM" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "KN" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "KP" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "KR" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "KW" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "KY" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "KZ" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "LA" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "LB" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "LC" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "LI" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "LK" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "LR" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "LS" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "LT" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "LU" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "LV" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "LY" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MA" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MC" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MD" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "ME" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MG" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MH" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MK" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "ML" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MM" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MN" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MO" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MP" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MQ" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MR" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MS" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MT" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MU" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MV" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MW" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MX" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MY" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "MZ" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "NA" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "NC" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "NE" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "NF" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "NG" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "NI" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "NL" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "NO" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "NP" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "NR" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "NU" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "NZ" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "OM" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "PA" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "PE" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "PF" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "PG" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "PH" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "PK" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "PL" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "PM" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "PN" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "PR" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "PS" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "PT" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "PW" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "PY" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "QA" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "RE" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "RO" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "RS" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "RU" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "RW" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "SA" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "SB" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "SC" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "SD" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "SE" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "SG" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "SH" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "SI" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "SK" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "SL" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "SM" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "SN" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "SO" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "SR" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "ST" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "SV" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "SY" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "SZ" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "TC" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "TD" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "TG" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "TH" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "TJ" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "TL" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "TM" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "TN" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "TO" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "TR" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "TT" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "TV" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "TW" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "TZ" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "UA" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "UG" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "US" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "UY" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "UZ" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "VA" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "VC" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "VE" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "VG" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "VI" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "VN" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "VU" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "WF" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "WS" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "YE" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "YT" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "ZA" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "ZM" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "ZW" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "alt-af" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "alt-an" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "alt-as" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "alt-eu" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "alt-na" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "alt-oc" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "alt-sa" , ".json")))) , LazyLock :: new (|| usage (include_str ! (concat ! ("region/" , "alt-ww" , ".json"))))] ; let idx = REGIONS . binary_search (& region) . ok () ? ; USAGES . get (idx) . map (| v | & * * v) }